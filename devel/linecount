#!/bin/sh

# Count lines of code in braidlab as a function of revision, for funsies.
#
# Run from the root braidlab folder as devel/linecount.
#
# Plot results in Matlab with linecount_plot.m
#
# To avoid putting the repo in a funny state, clone a fresh local copy
# first in tmp.  Delete when done.

ROOTDIR=`pwd`
DEVELDIR=$ROOTDIR/devel
LINECOUNTFILE=$DEVELDIR/linecount.dat
BRANCH=develop
#REVSTEP=1

REVLIST=`git rev-list --reverse $BRANCH`

rm -f $LINECOUNTFILE

cd /tmp
rm -rf braidlab-tmp
git clone $ROOTDIR braidlab-tmp
cd braidlab-tmp

for i in $REVLIST; do
    git checkout $i
    CODEFOLDERS="+braidlab"
    if [ -e 'testsuite' ]; then
	CODEFOLDERS="$CODEFOLDERS testsuite"
    fi
    if [ -e 'doc' ]; then
	CODEFOLDERS="$CODEFOLDERS doc"
    fi
    LINES=`find $CODEFOLDERS \
	-name '*.[cm]' -o -name '*.?pp' -o -name '*.tex' -o -name '*.bib' \
	| xargs wc -l | tail -1 | sed 's/ total$//g'`
    # assignmentoptimal.c was originally included in the main tree, so
    # subtract its linecount (441) if the file is present.
    if [ -e '+braidlab/private/assignmentoptimal.c' ]; then
	LINES=$(($LINES-441))
    fi
    # arrow.m is included as part of examples, but is extern.
    if [ -e 'doc/examples/arrow.m' ]; then
	LINES=$(($LINES-1410))
    fi
    # The date is in UTC seconds.
    DATE=`git log -1 --format=%ct $i`
    SHORTHASH=`git log -1 --format=%h $i`
    echo $SHORTHASH '\t' $DATE '\t' $LINES >> $LINECOUNTFILE
done

cd /tmp
rm -rf braidlab-tmp
